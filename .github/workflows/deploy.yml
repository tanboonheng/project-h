name: Build and Deploy to EKS

on:
  # push:
  #   branches: [ main ]
  workflow_dispatch:
    # paths:
    #   - 'simple-api-app/**'
    #   - 'kubernetes/simple-api-app/**'
  # pull_request:
  #   branches: [ main ]

env:
  AWS_REGION: us-east-1              
  DOCKER_HUB_REPO: boonheng12/simple-api-app
  EKS_CLUSTER: dev-eks-cluster
  KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        cd simple-api-app/app
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
        pip install -r requirements.txt
    
    - name: Run tests
      run: |
        cd simple-api-app/app
        pytest --cov=./ --cov-report=xml
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./simple-api-app/coverage.xml

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
    
    - name: Build and push image to Docker Hub
      env:
        IMAGE_TAG: ${{ github.sha }}
      run: |
        cd simple-api-app/app
        docker build -t ${{ env.DOCKER_HUB_REPO }}:$IMAGE_TAG .
        docker push ${{ env.DOCKER_HUB_REPO }}:$IMAGE_TAG
        echo "image=${{ env.DOCKER_HUB_REPO }}:$IMAGE_TAG" >> $GITHUB_OUTPUT

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Update kube config
      run: |
        aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER }} --region ${{ env.AWS_REGION }}
    
    - name: Deploy to EKS
      env:
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Update image tag in deployment file
        cd kubernetes/simple-api-app
        sed -i "s|${DOCKER_HUB_REPO}:.*|${DOCKER_HUB_REPO}:${IMAGE_TAG}|" simple-api-deployment.yaml
        
        # Apply Kubernetes manifests
        kubectl get ns dev || kubectl create ns dev
        kubectl apply -f . -n dev
        
        # Wait for deployment to complete
        kubectl rollout status deployment/simple-api-app -n dev